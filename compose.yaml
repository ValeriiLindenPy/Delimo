services:
  watchtower:
    image: containrrr/watchtower
    command:
      - "--label-enable"
      - "--interval"
      - "60"
      - "--rolling-restart"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  traefik:
    image: traefik:v3.1
    command:
      - "--log.level=WARN"
      - "--accesslog=true"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.web.http.redirections.entryPoint.to=websecure"
      - "--entryPoints.web.http.redirections.entryPoint.scheme=https"
      - "--entryPoints.websecure.address=:443"
      - "--entryPoints.websecure.http.tls.certResolver=myresolver"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=info@delimo.rs"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock"
    labels:
      - "traefik.http.middlewares.cors.headers.accesscontrolalloworigin=*"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowcredentials=true"
      - "traefik.http.routers.backend.middlewares=cors"
    restart: always

  backend:
    image: valeriilinden/delimo-backend:prod
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`delimo.rs`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.http.routers.oauth.rule=Host(`delimo.rs`) && PathPrefix(`/api/login/oauth2/code`)"
      - "traefik.http.routers.oauth.entrypoints=websecure"
      - "traefik.http.routers.oauth.tls.certresolver=myresolver"
      - "traefik.http.services.oauth.loadbalancer.server.port=8080"
    depends_on:
      - db
      - minio
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  frontend:
    image: valeriilinden/delimo-frontend:prod
    environment:
      - VITE_API_URL=https://delimo.rs/api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`delimo.rs`) || Host(`www.delimo.rs`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - "com.centurylinklabs.watchtower.enable=true"
    restart: always

  db:
    image: postgres:latest
    env_file:
      - .env
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  minio:
    image: quay.io/minio/minio:latest
    env_file:
      - .env
    volumes:
      - /srv/minio/data:/data
      - /srv/minio/certs:/root/.minio/certs
    command: server /data --console-address ":9001"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`s3.delimo.rs`)"
      - "traefik.http.routers.minio.entrypoints=websecure"
      - "traefik.http.routers.minio.tls=true"
      - "traefik.http.services.minio.loadbalancer.server.port=9000"
      - "traefik.http.routers.minio-console.rule=Host(`console.s3.delimo.rs`)"
      - "traefik.http.routers.minio-console.entrypoints=websecure"
      - "traefik.http.routers.minio-console.tls=true"
      - "traefik.http.services.minio-console.loadbalancer.server.port=9001"
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://127.0.0.1:9000/minio/health/live || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: always
    deploy:
      resources:
        limits:
          memory: 256M
volumes:
  db-data:
